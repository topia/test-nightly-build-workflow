name: build-for-snapshot-tag

on:
  workflow_dispatch:
  push:
    tags:
      - snapshot-**
  pull_request:
    branches:
      - main

jobs:
  query-target-commit:
    runs-on: ubuntu-latest
    env:
      COMMIT_HASH_FILE: last-commit-hash
    outputs:
      commit-hash: ${{ steps.query-commit-hash.outputs.commit-hash }}
    steps:
      - uses: actions/checkout@v5
      
      - name: query commit hash
        id: query-commit-hash
        run: |
          echo "commit-hash=$(cat $COMMIT_HASH_FILE)" >> $GITHUB_OUTPUT
          
  build:
    needs: query-target-commit
    env:
      GITHUB_REPO_URL: https://github.com/NationalSecurityAgency/ghidra/
      GITHUB_REPO: NationalSecurityAgency/ghidra
      TARGET_COMMIT_HASH: ${{ needs.query-target-commit.outputs.commit-hash }}
    outputs:
      github-repo-url: ${{ env.GITHUB_REPO_URL }}
      github-repo: ${{ env.GITHUB_REPO }}
      commit-hash: ${{ needs.query-target-commit.outputs.commit-hash }}
      oses: windows macos ubuntu
    strategy:
      matrix:
        os: [windows-latest, ubuntu-22.04, macos-13]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5
        with:
          repository: ${{ env.GITHUB_REPO }}
          ref: ${{ env.TARGET_COMMIT_HASH }}

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
          java-package: jdk # optional (jdk, jre, jdk+fx or jre+fx) - defaults to jdk
          check-latest: true
          cache: 'gradle'

      - uses: actions/setup-python@v6
        with:
          python-version: '3.12'
          check-latest: true
          update-environment: true          
      
      - name: Cache
        uses: actions/cache@v4
        with:
          path: dependencies
          key: ghidra-dependencies

      - name: fetch-deps
        run: |
          gradle -I gradle/support/fetchDependencies.gradle --no-daemon
          
      - name: build
        run: |
          gradle buildGhidra --no-daemon
          
      - name: find artifact name
        id: find-artifact-name
        uses: actions/github-script@v8
        with:
          script: |
            const globber = await glob.create('build/dist/*.zip')
            const files = await globber.glob()
            return files[0].split(/[\/\\]/).pop()
          result-encoding: string

      - name: find os basename
        id: find-os-basename
        uses: actions/github-script@v8
        with:
          script: |
            const os = '${{ matrix.os }}'
            return os.split('-')[0]
          result-encoding: string

      - name: update-release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: |
            created snapshot with ${{ env.TARGET_COMMIT_HASH }}: ${{ env.GITHUB_REPO_URL }}tree/${{ env.TARGET_COMMIT_HASH }}
          files: build/dist/${{ steps.find-artifact-name.outputs.result }}

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.find-os-basename.outputs.result }}
          path: build/dist/${{ steps.find-artifact-name.outputs.result }}
          retention-days: 1

  merge:
    needs: build
    runs-on: ubuntu-latest
    env:
      oses: ${{ needs.build.outputs.oses }}

    steps:
      - name: download artifacts
        uses: actions/download-artifact@v6
        with:
          path: artifacts

      - name: merge artifacts
        id: merge-artifacts
        run: |
          mkdir -p merged
          for os in $oses; do
            unzip -o artifacts/$os/*.zip -d merged
          done
          # TODO: merge Extensions/Eclipse/*/*.zip
          mkdir -p artifacts/merged
          (cd merged && zip -9 -r ../artifacts/merged/ghidra.zip *)
          basename=$(basename artifacts/windows/*.zip .zip | sed -e 's/_win.*//')
          mv artifacts/merged/ghidra.zip artifacts/merged/$basename.zip
          echo "output-name=$basename.zip" >> $GITHUB_OUTPUT

      - name: update-release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: artifacts/merged/${{ steps.merge-artifacts.outputs.output-name }}

      - name: upload merged artifact
        uses: actions/upload-artifact@v4
        with:
          name: merged
          path: artifacts/merged
          retention-days: 1
